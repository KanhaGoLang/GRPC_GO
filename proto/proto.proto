syntax = "proto3";

package grpcService;

option go_package = "./proto";

// User Proto Start
message User {
    int32 id= 1;
    string name =2;
    string email =3;
    string password = 4;
    string role = 5;
    bool is_active =6;
    string created_at= 7;
    string updated_at = 8;
}

message UserId {
    int32 id = 1;
}

message UserSuccess {
    bool is_success  =1;
}

message Users {
    repeated User user = 1;
}

message NoParameter  {

}

service UserService {
    rpc CreateUser(User) returns (User);
    rpc ReadUserById(UserId) returns (User);
    rpc UpdateUser(User) returns (User);
    rpc DeleteUser(UserId) returns (UserSuccess);
    rpc GetAllUsers(NoParameter) returns (Users);
    rpc GetUserPosts(UserId) returns (Posts);
}
 

// User Proto End

// Post Proto Start
message Post {
    int32 id= 1;
    string title =2;
    string description =3;
    bool is_active =4;
    string user_id= 5;
    string created_at= 6;
    string updated_at = 7;
}

message PostId {
    int32 id = 1;
}

message PostSuccess {
    bool is_success  = 1;
}

message Posts {
    repeated Post post = 1;
}

message NoPostParameter  {

}


service PostService {
    rpc Create(Post) returns (Post);
    rpc ReadById(PostId) returns (Post);
    rpc Update(Post) returns (Post);
    rpc Delete(PostId) returns (PostSuccess);
    rpc GetAll(NoPostParameter) returns (Posts);
}

// Post Proto end

 